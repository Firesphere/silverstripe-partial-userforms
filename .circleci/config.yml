# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: brettt89/silverstripe-web
        environment:
          - SS_DATABASE_CLASS=MySQLPDODatabase
          - SS_DATABASE_SERVER=127.0.0.1
          - SS_DATABASE_USERNAME=root
          - SS_DATABASE_PASSWORD=ubuntu
          - SS_DATABASE_NAME=circle_test
          - SS_ENVIRONMENT_TYPE=test
          - YUBIAUTH_CLIENTID=12345
          - YUBIAUTH_APIKEY=VGhpc0lzUmVhbGx5QVZhbGlkS2V5
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test
          - MYSQL_HOST=127.0.0.1

    working_directory: ~/var/www

    steps:
      - run: apt-get update && apt-get install -y apt-transport-https lsb-release
      ## Add keys for Yarn and Node
      - run: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - run: curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
      ## Add the required repositories
      - run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - run: echo 'deb https://deb.nodesource.com/node_9.x jessie main' > /etc/apt/sources.list.d/nodesource.list
      - run: echo 'deb-src https://deb.nodesource.com/node_9.x jessie main' >> /etc/apt/sources.list.d/nodesource.list
      - run: apt-get update && apt-get install -y yarn
      # Install additional requirements
      - run: composer self-update
      - checkout
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "composer.lock" }}-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-cache-

      - run: composer install
      - run: yarn install
      # Save all dependencies to cache
      - save_cache:
          key: v2-cache-{{ checksum "composer.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - mysite
            - vendor
            - resource
            - node_modules

      # run tests!
      - run: vendor/bin/sake dev/build
      - run: vendor/bin/phpunit --coverage-clover=coverage.xml -d memory_limit=512M tests/unit
      - run: vendor/bin/phpcs --standard=phpcs.xml.dist src tests/unit
      - run: bash <(curl -s https://codecov.io/bash) -f coverage.xml

